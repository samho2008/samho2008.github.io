(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{2e3:function(e,t,r){"use strict";r.r(t);var a=r(34),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"git-gitignore-文件编写规则及常用模板"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git-gitignore-文件编写规则及常用模板"}},[e._v("#")]),e._v(" Git .gitignore 文件编写规则及常用模板")]),e._v(" "),r("p",[e._v("通常，在项目上使用 Git 的工作时，您会希望排除将特定文件或目录推送到远程仓库库中的情况。")]),e._v(" "),r("p",[r("code",[e._v(".gitignore")]),e._v(" 文件可以指定 Git 应该忽略的"),r("strong",[e._v("未跟踪文件")]),e._v("。")]),e._v(" "),r("p",[e._v("在本教程中，我们将说明如何使用 .gitignore 忽略 Git 中的文件和目录。包括常见匹配模式 * 星号，斜杠 /，# 井号注释，? 问号，[] 方括号等通匹配符，一个 .gitignore 文件的示例，自定义排除忽略规则，全局的 .gitignore 配置，调试 .gitignore 文件，显示所有被忽略的文件。")]),e._v(" "),r("h2",{attrs:{id:"应该忽略哪些文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应该忽略哪些文件"}},[e._v("#")]),e._v(" 应该忽略哪些文件")]),e._v(" "),r("p",[e._v("被忽略的文件通常是特定于平台的文件或从构建系统自动创建的文件。一些常见的例子包括：运行时文件，例如日志，锁定文件，缓存或临时文件。具有敏感信息的文件，例如密码或 API 密钥。已编译的代码，例如 "),r("code",[e._v(".class")]),e._v(" 或 "),r("code",[e._v(".o")]),e._v("。依赖目录，例如 "),r("code",[e._v("/vendor")]),e._v(" 或 "),r("code",[e._v("/node_modules")]),e._v("。构建的输出目录，例如 "),r("code",[e._v("/public")]),e._v("，"),r("code",[e._v("/out")]),e._v(" 或 "),r("code",[e._v("/dist")]),e._v("。系统文件，例如 "),r("code",[e._v(".DS_Store")]),e._v(" 或 "),r("code",[e._v("Thumbs.db")]),e._v("。IDE 或"),r("a",{attrs:{href:"https://www.myfreax.com/how-to-install-visual-studio-code-on-ubuntu-18-04/",target:"_blank",rel:"noopener noreferrer"}},[e._v("文本编辑器"),r("OutboundLink")],1),e._v("配置文件。")]),e._v(" "),r("h2",{attrs:{id:"gitignore模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitignore模式"}},[e._v("#")]),e._v(" "),r("code",[e._v(".gitignore")]),e._v("模式")]),e._v(" "),r("p",[r("code",[e._v(".gitignore")]),e._v(" 文件是纯文本文件，其中每行包含一个模式，用于忽略文件或目录。"),r("code",[e._v(".gitignore")]),e._v(" 使用 "),r("a",{attrs:{href:"http://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v(" globbing pattern"),r("OutboundLink")],1),e._v(" 模式来匹配带通配符的文件名。如果文件或目录包含在通配符，则可以使用单个反斜杠（"),r("code",[e._v("\\")]),e._v("）来转义字。")]),e._v(" "),r("h2",{attrs:{id:"注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[e._v("#")]),e._v(" 注释")]),e._v(" "),r("p",[e._v("以井号（"),r("code",[e._v("#")]),e._v("）开头的行是注释，将被忽略。空行可以用来提高文件的可读性，并可以对相关的模式行进行分组。")]),e._v(" "),r("h2",{attrs:{id:"斜杠符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#斜杠符"}},[e._v("#")]),e._v(" 斜杠符")]),e._v(" "),r("p",[e._v("斜杠符号（"),r("code",[e._v("/")]),e._v("）是目录的分隔符。斜杠开头模式相对于"),r("code",[e._v(".gitignore")]),e._v("所在的目录。如果模式以斜杠开头，则仅从仓库的根目录中开始匹配文件和目录。如果模式不是以斜杠开头，则它将匹配任何目录或子目录中的文件和目录。")]),e._v(" "),r("p",[e._v("如果模式以斜杠结尾，则仅匹配目录。当目录被忽略时，其所有文件和子目录也将被忽略。")]),e._v(" "),r("h2",{attrs:{id:"文件名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文件名"}},[e._v("#")]),e._v(" 文件名")]),e._v(" "),r("p",[e._v("最直接的模式是没有任何特殊字符的文件名。例如/access.log仅匹配access.log。而access.log将会匹配当前目录与子目录 access.log，logs/access.log ，var/logs/access.log。当以/斜杠符号结束时则匹配目录。例如build/匹配build目录。")]),e._v(" "),r("h3",{attrs:{id:"通配符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通配符"}},[e._v("#")]),e._v(" 通配符")]),e._v(" "),r("p",[e._v("****"),r("em",[e._v("星号符号匹配零个或多个字符。例如")]),e._v(".log模式将匹配error.log，logs/debug.log，build/logs/error.log等所有目录下以.log作为扩展名的文件。")]),e._v(" "),r("p",[e._v("******两个相邻的星号符号匹配任何文件或零个或多个目录。当后跟斜杠（"),r("code",[e._v("/")]),e._v("）时，它仅与目录匹配。例如，logs/"),r("strong",[e._v("将会匹配logs目录中所有文件与目录。")]),e._v("/build将匹配所有目录中出现以build命名目录与文件var/build，pub/build。")]),e._v(" "),r("p",[e._v("模式foo/**/bar将匹配foo/bar，foo/a/bar，foo/a/b/c/bar。")]),e._v(" "),r("p",[e._v("?问号匹配单个任意字符。例如模式access?.log将会匹配access0.log，access1.log，accessA.log 。")]),e._v(" "),r("h3",{attrs:{id:"方括号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#方括号"}},[e._v("#")]),e._v(" 方括号")]),e._v(" "),r("p",[e._v("**[...]**方括号匹配方括号中包含的字符。当两个字符之间用连字符"),r("code",[e._v("-")]),e._v("隔开时，表示一个字符范围。该范围包括这两个字符之间的所有字符。范围可以是字母或数字。如果"),r("code",[e._v("[")]),e._v("之后的第一个字符是感叹号（"),r("code",[e._v("!")]),e._v("），则该模式匹配除指定集合中的字符以外的任何字符。")]),e._v(" "),r("p",[e._v("例如模式*.[oa]将匹配文件file.o，file.a。模式*.[!oa]将匹配file.s，file.1但不匹配file.0与file.a。")]),e._v(" "),r("h3",{attrs:{id:"反模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反模式"}},[e._v("#")]),e._v(" 反模式")]),e._v(" "),r("p",[e._v("以感叹号（"),r("code",[e._v("!")]),e._v("）开头的模式将否定先前模式。此规则的例外是，如果排除了其父目录，则重新包含文件。例如模式 *.log与!error.log这将会匹配所有以.log作为扩展名文件，但不匹配error.log。")]),e._v(" "),r("h2",{attrs:{id:"gitignore范例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitignore范例"}},[e._v("#")]),e._v(" "),r("code",[e._v(".gitignore")]),e._v("范例")]),e._v(" "),r("p",[e._v("以下是"),r("code",[e._v(".gitignore")]),e._v("文件的示例：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("# 忽略node_modules目录\nnode_modules/\n\n# 忽略Logs\nlogs\n*.log\n\n# 忽略/dist目录，相对.gitignore文件所在目录\n/dist\n\n# 忽略.env文件\n.env\n\n# 忽略IDE的配置文件\n.idea/\n.vscode/\n*.sw*\n")])])]),r("h2",{attrs:{id:"本地-gitignore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本地-gitignore"}},[e._v("#")]),e._v(" 本地"),r("code",[e._v(".gitignore")])]),e._v(" "),r("p",[e._v("本地 "),r("code",[e._v(".gitignore")]),e._v(" 文件通常放置在仓库库的根目录中。但是，您可以在仓库的不同子目录中创建多个 "),r("code",[e._v(".gitignore")]),e._v(" 文件。 "),r("code",[e._v(".gitignore")]),e._v(" 文件中的模式相对于文件所在目录匹配。")]),e._v(" "),r("p",[e._v("在子目录中的文件中定义的模式优先于高于根目录中的模式。本地 "),r("code",[e._v(".gitignore")]),e._v(" 文件与其他开发人员共享，并且应包含对存储库的所有其他用户有用的模式。")]),e._v(" "),r("h2",{attrs:{id:"个人忽略规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#个人忽略规则"}},[e._v("#")]),e._v(" 个人忽略规则")]),e._v(" "),r("p",[e._v("应在"),r("code",[e._v(".git/info/exclude")]),e._v("文件中配置特定于本地仓库且不应分发到其他仓库的模式。例如，您可以使用此文件忽略个人项目工具中生成的文件。")]),e._v(" "),r("h2",{attrs:{id:"全局-gitignore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#全局-gitignore"}},[e._v("#")]),e._v(" 全局"),r("code",[e._v(".gitignore")])]),e._v(" "),r("p",[e._v("Git还允许您创建全局"),r("code",[e._v(".gitignore")]),e._v("文件，您可以为本地系统上的每个Git仓库定义忽略规则。该文件可以命名为任意名称，并存储在任何位置。保存此文件的最常见位置是主目录。您必须手动"),r("a",{attrs:{href:"https://www.myfreax.com/create-a-file-in-linux/",target:"_blank",rel:"noopener noreferrer"}},[e._v("创建文件"),r("OutboundLink")],1),e._v("并配置Git使用它。")]),e._v(" "),r("p",[e._v("例如，要将"),r("code",[e._v("~/.gitignore_global")]),e._v("设置为全局Git忽略文件，您可以执行以下操作。首先创建文件：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("touch ~/.gitignore_global\n")])])]),r("p",[e._v("将文件添加到Git配置：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git config --global core.excludesfile ~/.gitignore_global\n")])])]),r("p",[e._v("使用"),r("a",{attrs:{href:"https://www.myfreax.com/tag/vim/",target:"_blank",rel:"noopener noreferrer"}},[e._v("文本编辑器"),r("OutboundLink")],1),e._v("打开文件并向其中添加规则。全局规则对于忽略您永远不想提交的特定文件（例如带有敏感信息或已编译的可执行文件的文件）特别有用。")]),e._v(" "),r("h2",{attrs:{id:"忽略以前提交的文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#忽略以前提交的文件"}},[e._v("#")]),e._v(" 忽略以前提交的文件")]),e._v(" "),r("p",[e._v("您的工作副本中的文件可以被追踪，也可以不被追踪。要忽略先前提交的文件，您需要取消暂存并从索引中删除该文件，然后在"),r("code",[e._v(".gitignore")]),e._v("中添加该文件模式：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git rm --cached filename\n")])])]),r("p",[r("code",[e._v("--cached")]),e._v("选项告诉git不要从工作树中删除文件，而只是从索引中删除它。要递归删除目录，请使用"),r("code",[e._v("-r")]),e._v("选项：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git rm --cached filename\n")])])]),r("p",[e._v("如果要从索引和本地文件系统中删除文件，请忽略"),r("code",[e._v("--cached")]),e._v("选项。以递归方式删除文件时，使用"),r("code",[e._v("-n")]),e._v("选项将执行“空运行”并显示要删除的文件：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git rm -r -n directory\n")])])]),r("h2",{attrs:{id:"调试-gitignore文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#调试-gitignore文件"}},[e._v("#")]),e._v(" 调试"),r("code",[e._v(".gitignore")]),e._v("文件")]),e._v(" "),r("p",[e._v("有时候，确定为什么要忽略特定文件可能会很困难，尤其是当您使用多个"),r("code",[e._v(".gitignore")]),e._v("文件或复杂格式时。这是"),r("a",{attrs:{href:"https://git-scm.com/docs/git-check-ignore",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("git check-ignore")]),r("OutboundLink")],1),e._v("命令的用处，告诉git显示匹配模式的详细信息。")]),e._v(" "),r("p",[e._v("例如，要检查为什么忽略"),r("code",[e._v("www/yarn.lock")]),e._v("文件，可以运行：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git check-ignore -v www/yarn.lock\n")])])]),r("p",[e._v("输出显示"),r("code",[e._v("gitignore")]),e._v("文件的路径，匹配行的编号和实际模式。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("www/.gitignore:31:/yarn.lock\twww/yarn.lock\n")])])]),r("p",[e._v("该命令还接受多个文件名作为参数，并且文件不必存在于您的工作树中。")]),e._v(" "),r("h2",{attrs:{id:"显示所有被忽略的文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#显示所有被忽略的文件"}},[e._v("#")]),e._v(" 显示所有被忽略的文件")]),e._v(" "),r("p",[e._v("带有"),r("code",[e._v("--ignored")]),e._v("选项的"),r("code",[e._v("git status")]),e._v("命令显示所有被忽略文件的列表：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("git status --ignored\n")])])]),r("h2",{attrs:{id:"结论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[e._v("#")]),e._v(" 结论")]),e._v(" "),r("p",[e._v(".gitignore文件使您可以从git仓库中排除文件。该文件包含用于描述应忽略的特定文件和目录的模式。"),r("a",{attrs:{href:"https://gitignore.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitignore.io"),r("OutboundLink")],1),e._v("是一种在线服务，可让您为操作系统，编程语言或IDE生成"),r("code",[e._v(".gitignore")]),e._v("文件。")]),e._v(" "),r("blockquote",[r("p",[e._v("参考资料：")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.myfreax.com/gitignore-ignoring-files-in-git/",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何使用.gitignore忽略Git中的文件和目录"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://segmentfault.com/a/1190000019725760",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitignore文件匹配规则"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qq_31603575/article/details/83417854",target:"_blank",rel:"noopener noreferrer"}},[e._v("git忽略文件夹中除了指定的文件外的其他所有文件"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://learnku.com/articles/18380",target:"_blank",rel:"noopener noreferrer"}},[e._v(".gitignore 在已忽略文件夹中不忽略指定文件、文件夹..."),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/CalShell/article/details/52670175",target:"_blank",rel:"noopener noreferrer"}},[e._v("在gitignore中设置不忽略的文件（夹）"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h2",{attrs:{id:"常用-gitignore-模板"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用-gitignore-模板"}},[e._v("#")]),e._v(" 常用 .gitignore 模板")]),e._v(" "),r("h3",{attrs:{id:"忽略微软文档打开后产生的临时文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#忽略微软文档打开后产生的临时文件"}},[e._v("#")]),e._v(" 忽略微软文档打开后产生的临时文件")]),e._v(" "),r("p",[e._v("如果 git 中提交记录包含了微软办公文档，每次打开都会生成一个临时文件，格式："),r("code",[e._v("~$xxx")]),e._v(".docx。这会操作每次提交时都要手动剔除这个文件，解决这个问题的方式就是在 .gitignore 中增加剔除规则，但是这个规则要怎么写呢？")]),e._v(" "),r("p",[e._v("剔除所有以~$开头的文件：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("# 忽略打开微软文档产生的临时文件\n~$*\n")])])]),r("blockquote",[r("p",[e._v("参考资料：")]),e._v(" "),r("p",[e._v("["),r("a",{attrs:{href:"https://www.cnblogs.com/chengmuyu/p/14676610.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("git ignore 微软临时文件(~$xxx.xlsx)"),r("OutboundLink")],1),e._v("](https://www.cnblogs.com/chengmuyu/p/14676610.html)")])])])}),[],!1,null,null,null);t.default=o.exports}}]);