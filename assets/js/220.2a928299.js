(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{2075:function(a,v,t){"use strict";t.r(v);var _=t(34),s=Object(_.a)({},(function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"java-各版本特性总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-各版本特性总结"}},[a._v("#")]),a._v(" Java 各版本特性总结")]),a._v(" "),t("p",[a._v("Java 或者说 JDK 的更新一般分为两部分内容：Java 语言、JVM（C、C++ 编写），但通常情况下都不会单独发布，因为新的语言特性需要特定的 JVM 支持才行。")]),a._v(" "),t("h2",{attrs:{id:"jdk-beta-1995"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-beta-1995"}},[a._v("#")]),a._v(" JDK Beta（1995）")]),a._v(" "),t("p",[a._v("1995 年发布 alpha 和 beta Java 公开版本，非常不稳定。")]),a._v(" "),t("h2",{attrs:{id:"jdk-1-0-1996"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-1-0-1996"}},[a._v("#")]),a._v(" JDK 1.0（1996）")]),a._v(" "),t("p",[a._v("1996-01-23 Oak（橡树）")]),a._v(" "),t("p",[a._v("初代版本，伟大的一个里程碑，但是是纯解释运行，使用外挂 JIT，性能比较差，运行速度慢。")]),a._v(" "),t("blockquote",[t("p",[a._v("Sun 公司发布 Java 1.0，发布初期叫 Oak，后改名为 Java（JDK 1.0 基本上只支持 Java 语言基础特性）。")])]),a._v(" "),t("h2",{attrs:{id:"jdk-1-1-1997"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk-1-1-1997"}},[a._v("#")]),a._v(" JDK 1.1（1997）")]),a._v(" "),t("p",[a._v("1997-02-19")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("引入内部类")])]),a._v(" "),t("li",[t("p",[a._v("引入 JDBC (Java DataBase Connectivity)")])]),a._v(" "),t("li",[t("p",[a._v("引入 RMI")])]),a._v(" "),t("li",[t("p",[a._v("反射")])]),a._v(" "),t("li",[t("p",[a._v("Java Bean")])])]),a._v(" "),t("h2",{attrs:{id:"j2se-1-2-1998"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#j2se-1-2-1998"}},[a._v("#")]),a._v(" J2SE 1.2（1998）")]),a._v(" "),t("p",[a._v("1998-12-08 Playground（操场）")]),a._v(" "),t("ul",[t("li",[a._v("Java 技术体系拆分为：J2SE、J2EE、J2ME")]),a._v(" "),t("li",[a._v("引入集合框架")]),a._v(" "),t("li",[a._v("引入 JIT (Just In Time) 编译器")]),a._v(" "),t("li",[a._v("引入 EJB 技术")]),a._v(" "),t("li",[a._v("JFC (Java Foundation Classes)，包括 Swing 1.0，拖放和 Java 2D 类库")]),a._v(" "),t("li",[a._v("对打包的 Java 文件进行数字签名")]),a._v(" "),t("li",[a._v("Java 插件")]),a._v(" "),t("li",[a._v("JDBC 中引入可滚动结果集，BLOB、CLOB，批量更新和用户自定义类型")]),a._v(" "),t("li",[a._v("Applet中添加声音支持")])]),a._v(" "),t("h2",{attrs:{id:"j2se-1-3-2000"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#j2se-1-3-2000"}},[a._v("#")]),a._v(" J2SE 1.3（2000）")]),a._v(" "),t("p",[a._v("2000-05-08 Kestrel(红隼)")]),a._v(" "),t("ul",[t("li",[a._v("引入 Timer API")]),a._v(" "),t("li",[a._v("初次引入 HotSpot VM")]),a._v(" "),t("li",[a._v("Java Sound API")]),a._v(" "),t("li",[a._v("jar 文件索引")]),a._v(" "),t("li",[a._v("对 Java 的各个方面都做了大量优化和增强")])]),a._v(" "),t("h2",{attrs:{id:"j2se-1-4-2002-java真正走向成熟的版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#j2se-1-4-2002-java真正走向成熟的版本"}},[a._v("#")]),a._v(" J2SE 1.4（2002）（Java真正走向成熟的版本）")]),a._v(" "),t("p",[a._v("2004-02-06 Merlin(隼)")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("XML 处理")])]),a._v(" "),t("li",[t("p",[a._v("Java 打印服务")])]),a._v(" "),t("li",[t("p",[a._v("引入NIO")])]),a._v(" "),t("li",[t("p",[a._v("正则表达式")])]),a._v(" "),t("li",[t("p",[a._v("链式异常处理")])]),a._v(" "),t("li",[t("p",[a._v("新增 java.util.logging 日志 API")])]),a._v(" "),t("li",[t("p",[a._v("Java Web Start")])]),a._v(" "),t("li",[t("p",[a._v("Java Web Start")])]),a._v(" "),t("li",[t("p",[a._v("断言")])]),a._v(" "),t("li",[t("p",[a._v("Preferences API")])]),a._v(" "),t("li",[t("p",[a._v("支持 IPV6")])]),a._v(" "),t("li",[t("p",[a._v("引入 Imgae I/O API")])])]),a._v(" "),t("h2",{attrs:{id:"j2se-5-0-2004-java语言重大升级-版本号更名为5-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#j2se-5-0-2004-java语言重大升级-版本号更名为5-0"}},[a._v("#")]),a._v(" J2SE 5.0（2004）（Java语言重大升级，版本号更名为5.0）")]),a._v(" "),t("p",[a._v("2004-09-30 Tiger(老虎)")]),a._v(" "),t("ul",[t("li",[a._v("泛型")]),a._v(" "),t("li",[a._v("枚举")]),a._v(" "),t("li",[a._v("注解")]),a._v(" "),t("li",[a._v("自动装箱与自动拆箱")]),a._v(" "),t("li",[a._v("静态导入（import static）")]),a._v(" "),t("li",[a._v("可变参数")]),a._v(" "),t("li",[a._v("JUC")]),a._v(" "),t("li",[a._v("增强 For-Each 循环，可以使用迭代方式")]),a._v(" "),t("li",[a._v("Instrumentation")])]),a._v(" "),t("h2",{attrs:{id:"java-se-6-2006-jvm重大升级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-6-2006-jvm重大升级"}},[a._v("#")]),a._v(" Java SE 6（2006）（JVM重大升级）")]),a._v(" "),t("p",[a._v("2006-12-11 Mustang(野马)")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("支持脚本语言")])]),a._v(" "),t("li",[t("p",[a._v("JDBC 4.0 API")])]),a._v(" "),t("li",[t("p",[a._v("Java Compiler API")])]),a._v(" "),t("li",[t("p",[a._v("可插拔注解")])]),a._v(" "),t("li",[t("p",[a._v("增加对 Native PKI (Public Key Infrastructure)，Java GSS (Generic Security Service)，Kerberos 和 LDAP (Lightweight Directory Access Protocol) 支持")])]),a._v(" "),t("li",[t("p",[a._v("引入垃圾回收器 G1")])]),a._v(" "),t("li",[t("p",[a._v("优化锁与同步、垃圾收集、类加载等")])]),a._v(" "),t("li",[t("p",[a._v("继承 Web Services")])])]),a._v(" "),t("h2",{attrs:{id:"java-se-7-2011-sun被-oracle-收购-沉寂-5-年后由-oracle-推出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-7-2011-sun被-oracle-收购-沉寂-5-年后由-oracle-推出"}},[a._v("#")]),a._v(" Java SE 7（2011）（SUN被 Oracle 收购，沉寂 5 年后由 Oracle 推出）")]),a._v(" "),t("p",[a._v("2011-07-28 Dolphin(海豚)")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("钻石语法（在创建泛型对象时自动类型推断）")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// java 7 之前")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// java 7 开始")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("支持 try-with-resources 语法糖")])]),a._v(" "),t("li",[t("p",[a._v("多个 catch 块用 "),t("code",[a._v("|")]),a._v(" 连接")])]),a._v(" "),t("li",[t("p",[a._v("switch 语句块中允许以字符串作为分支条件")])]),a._v(" "),t("li",[t("p",[a._v("支持动态语言")])]),a._v(" "),t("li",[t("p",[a._v("64 位 JDK 的指针压缩")])]),a._v(" "),t("li",[t("p",[a._v("数值类型可以用二进制字符串表示，并且可以在字符串表示中添加下划线")])]),a._v(" "),t("li",[t("p",[a._v("引入 Java NIO 2 开发包")])]),a._v(" "),t("li",[t("p",[a._v("null 值的自动处理")])])]),a._v(" "),t("h2",{attrs:{id:"java-se-8-2014-java-语言重大升级-lts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-8-2014-java-语言重大升级-lts"}},[a._v("#")]),a._v(" Java SE 8（2014）（Java 语言重大升级，LTS）")]),a._v(" "),t("p",[a._v("2014-03-18")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Lambda 表达式")]),a._v("：Lambda 允许把函数作为一个方法的参数（函数作为参数传递进方法中）（闭包，允许我们将函数当成参数传递给某个方法，或者把代码本身当作数据处理）")]),a._v(" "),t("li",[t("strong",[a._v("默认方法和静态方法")]),a._v("：默认方法就是一个在接口里面有了一个实现的方法。")]),a._v(" "),t("li",[t("strong",[a._v("方法引用")]),a._v(" − 方法引用提供了非常有用的语法，可以直接引用已有Java类或对象（实例）的方法或构造器。与lambda联合使用，方法引用可以使语言的构造更紧凑简洁，减少冗余代码。无参构造器方法引用：类名::new 或者 Class")]),a._v(" "),t("li",[t("strong",[a._v("新工具")]),a._v(" − 新的编译工具，如：Nashorn引擎 jjs、 类依赖分析器jdeps。")]),a._v(" "),t("li",[t("strong",[a._v("Stream API")]),a._v(" −新添加的Stream API（java.util.stream） 把真正的函数式编程风格引入到Java中。")]),a._v(" "),t("li",[t("strong",[a._v("Date Time API")]),a._v(" − 加强对日期与时间的处理。")]),a._v(" "),t("li",[t("strong",[a._v("Optional 类")]),a._v(" − Optional 类已经成为 Java 8 类库的一部分，用来解决空指针异常。")]),a._v(" "),t("li",[t("strong",[a._v("Nashorn, JavaScript 引擎")]),a._v(" − Java 8提供了一个新的Nashorn javascript引擎，它允许我们在JVM上运行特定的javascript应用。")])]),a._v(" "),t("blockquote",[t("p",[a._v("参考：")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://www.runoob.com/java/java8-new-features.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://www.runoob.com/java/java8-new-features.html"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"java-se-9-2017"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-9-2017"}},[a._v("#")]),a._v(" Java SE 9（2017）")]),a._v(" "),t("p",[a._v("2017-09-22")]),a._v(" "),t("ul",[t("li",[t("p",[t("strong",[a._v("模块系统")]),a._v("：模块是一个包的容器，Java 9 最大的变化之一是引入了模块系统（Jigsaw 项目）。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("REPL (JShell)")]),a._v("：交互式编程环境。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("HTTP 2 客户端")]),a._v("：HTTP/2标准是HTTP协议的最新版本，新的 HTTPClient API 支持 WebSocket 和 HTTP2 流以及服务器推送特性。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进的 Javadoc")]),a._v("：Javadoc 现在支持在 API 文档中的进行搜索。另外，Javadoc 的输出现在符合兼容 HTML5 标准。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("多版本兼容 JAR 包")]),a._v("：多版本兼容 JAR 功能能让你创建仅在特定版本的 Java 环境中运行库程序时选择使用的 class 版本。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("集合工厂方法")]),a._v("：List，Set 和 Map 接口中，新的静态工厂方法可以创建这些集合的不可变实例。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("私有接口方法")]),a._v("：在接口中使用private私有方法。我们可以使用 private 访问修饰符在接口中编写私有方法。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("进程 API")]),a._v(": 改进的 API 来控制和管理操作系统进程。引进 java.lang.ProcessHandle 及其嵌套接口 Info 来让开发者逃离时常因为要获取一个本地进程的 PID 而不得不使用本地代码的窘境。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进的 Stream API")]),a._v("：改进的 Stream API 添加了一些便利的方法，使流处理更容易，并使用收集器编写复杂的查询。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进 try-with-resources")]),a._v("：如果你已经有一个资源是 final 或等效于 final 变量,您可以在 try-with-resources 语句中使用该变量，而无需在 try-with-resources 语句中声明一个新变量。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进的弃用注解 @Deprecated")]),a._v("：注解 @Deprecated 可以标记 Java API 状态，可以表示被标记的 API 将会被移除，或者已经破坏。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进钻石操作符(Diamond Operator)")]),a._v(" ：匿名类可以使用钻石操作符(Diamond Operator)。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进 Optional 类")]),a._v("：java.util.Optional 添加了很多新的有用方法，Optional 可以直接转为 stream。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("多分辨率图像 API")]),a._v("：定义多分辨率图像API，开发者可以很容易的操作和展示不同分辨率的图像了。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("改进的 CompletableFuture API")]),a._v(" ： CompletableFuture 类的异步机制可以在 ProcessHandle.onExit 方法退出时执行操作。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("轻量级的 JSON API")]),a._v("：内置了一个轻量级的JSON API")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("响应式流（Reactive Streams) API")]),a._v(": Java 9中引入了新的响应式流 API 来支持 Java 9 中的响应式编程。")])]),a._v(" "),t("li",[t("p",[a._v("JVM类加载机制跟之前的双亲委派模型有了很大差别，趋向模块化设计，即 Jigsaw 项目（参考OSGi？）")])]),a._v(" "),t("li",[t("p",[a._v("AOT编译，通过 Graal VM 实现")])]),a._v(" "),t("li",[t("p",[a._v("改善锁竞争机制")])]),a._v(" "),t("li",[t("p",[a._v("String 类底层不再采用 char 数组存储")])]),a._v(" "),t("li",[t("p",[a._v("默认垃圾回收器改为 G1")])])]),a._v(" "),t("blockquote",[t("p",[a._v("参考：")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://www.runoob.com/java/java9-new-features.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://www.runoob.com/java/java9-new-features.html"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"java-se-10-2018"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-10-2018"}},[a._v("#")]),a._v(" Java SE 10（2018）")]),a._v(" "),t("p",[a._v("2018-03-21")]),a._v(" "),t("p",[a._v("根据官网的公开资料，共有12个重要特性，如下：")]),a._v(" "),t("ul",[t("li",[a._v("JEP286，var 局部变量类型推断。")]),a._v(" "),t("li",[a._v("JEP296，将原来用 Mercurial 管理的众多 JDK 仓库代码，合并到一个仓库中，简化开发和管理过程。")]),a._v(" "),t("li",[a._v("JEP304，统一的垃圾回收接口。")]),a._v(" "),t("li",[a._v("JEP307，G1 垃圾回收器的并行完整垃圾回收，实现并行性来改善最坏情况下的延迟。")]),a._v(" "),t("li",[a._v("JEP310，应用程序类数据 (AppCDS) 共享，通过跨进程共享通用类元数据来减少内存占用空间，和减少启动时间。")]),a._v(" "),t("li",[a._v("JEP312，ThreadLocal 握手交互。在不进入到全局 JVM 安全点 (Safepoint) 的情况下，对线程执行回调。优化可以只停止单个线程，而不是停全部线程或一个都不停。")]),a._v(" "),t("li",[a._v("JEP313，移除 JDK 中附带的 javah 工具。可以使用 javac -h 代替。")]),a._v(" "),t("li",[a._v("JEP314，使用附加的 Unicode 语言标记扩展。")]),a._v(" "),t("li",[a._v("JEP317，能将堆内存占用分配给用户指定的备用内存设备。")]),a._v(" "),t("li",[a._v("JEP317，使用 Graal 基于 Java 的编译器，可以预先把 Java 代码编译成本地代码来提升效能。")]),a._v(" "),t("li",[a._v("JEP318，在 OpenJDK 中提供一组默认的根证书颁发机构证书。开源目前 Oracle 提供的Java SE 的根证书，这样 OpenJDK 对开发人员使用起来更方便。")]),a._v(" "),t("li",[a._v("JEP322，基于时间定义的发布版本，即上述提到的发布周期。版本号为$FEATURE.$INTERIM.$UPDATE.$PATCH，分j别是大版本，中间版本，升级包和补丁版本。")])]),a._v(" "),t("h2",{attrs:{id:"java-se-11-2018-lts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-11-2018-lts"}},[a._v("#")]),a._v(" Java SE 11（2018）（LTS）")]),a._v(" "),t("p",[a._v("2018-09-25")]),a._v(" "),t("p",[a._v("翻译后的新特性有：")]),a._v(" "),t("ul",[t("li",[a._v("动态类文件常量")]),a._v(" "),t("li",[a._v("Epsilon无操作垃圾收集器，常用来做测试")]),a._v(" "),t("li",[a._v("引入ZGC")]),a._v(" "),t("li",[a._v("181:Nest-Based访问控制")]),a._v(" "),t("li",[a._v("309:动态类文件常量")]),a._v(" "),t("li",[a._v("315:改善Aarch64 intrinsic")]),a._v(" "),t("li",[a._v("318:无操作垃圾收集器")]),a._v(" "),t("li",[a._v("320:消除Java EE和CORBA模块")]),a._v(" "),t("li",[a._v("321:HTTP客户端(标准)")]),a._v(" "),t("li",[a._v("323:局部变量的语法λ参数")]),a._v(" "),t("li",[a._v("324:Curve25519和Curve448关键协议")]),a._v(" "),t("li",[a._v("327:Unicode 10")]),a._v(" "),t("li",[a._v("328:飞行记录器")]),a._v(" "),t("li",[a._v("329:ChaCha20和Poly1305加密算法")]),a._v(" "),t("li",[a._v("330:发射一列纵队源代码程序")]),a._v(" "),t("li",[a._v("331:低开销堆分析")]),a._v(" "),t("li",[a._v("332:传输层安全性(Transport Layer Security,TLS)1.3")]),a._v(" "),t("li",[a._v("333:动作:一个可伸缩的低延迟垃圾收集器 (实验)")]),a._v(" "),t("li",[a._v("335:反对Nashorn JavaScript引擎")]),a._v(" "),t("li",[a._v("336:反对Pack200工具和API")])]),a._v(" "),t("h2",{attrs:{id:"java-se-12-2019-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-se-12-2019-3"}},[a._v("#")]),a._v(" Java SE 12（2019.3）")]),a._v(" "),t("ul",[t("li",[a._v("实验性的低延迟垃圾收集器：Shenandoah")])]),a._v(" "),t("p",[a._v("翻译后的新特性有：")]),a._v(" "),t("ul",[t("li",[a._v("189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental) ：新增一个名为 Shenandoah 的垃圾回收器，它通过在 Java 线程运行的同时进行疏散 (evacuation) 工作来减少停顿时间。")]),a._v(" "),t("li",[a._v("230: Microbenchmark Suite：新增一套微基准测试，使开发者能够基于现有的 Java Microbenchmark Harness（JMH）轻松测试 JDK 的性能，并创建新的基准测试。")]),a._v(" "),t("li",[a._v("325: Switch Expressions (Preview) ：对 switch 语句进行扩展，使其可以用作语句或表达式，简化日常代码。")]),a._v(" "),t("li",[a._v("334: JVM Constants API ：引入一个 API 来对关键类文件 (key class-file) 和运行时工件的名义描述（nominal descriptions）进行建模，特别是那些可从常量池加载的常量。")]),a._v(" "),t("li",[a._v("340: One AArch64 Port, Not Two ：删除与 arm64 端口相关的所有源码，保留 32 位 ARM 移植和 64 位 aarch64 移植。")]),a._v(" "),t("li",[a._v("341: Default CDS Archives ：默认生成类数据共享（CDS）存档。")]),a._v(" "),t("li",[a._v("344: Abortable Mixed Collections for G1 ：当 G1 垃圾回收器的回收超过暂停目标，则能中止垃圾回收过程.")]),a._v(" "),t("li",[a._v("346: Promptly Return Unused Committed Memory from G1 ：改进 G1 垃圾回收器，以便在空闲时自动将 Java 堆内存返回给操作系统。")])]),a._v(" "),t("blockquote",[t("p",[a._v("参考资料：")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.linuxidc.com/Linux/2019-07/159326.htm",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java各版本新特性总结"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/ranyuangang/article/details/82855017",target:"_blank",rel:"noopener noreferrer"}},[a._v("Java1.0-1.12各个版本的新特性"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Java%E7%89%88%E6%9C%AC%E6%AD%B7%E5%8F%B2",target:"_blank",rel:"noopener noreferrer"}},[a._v("维基百科-Java版本历史"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=s.exports}}]);