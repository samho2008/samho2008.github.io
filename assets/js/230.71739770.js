(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{2092:function(s,a,t){"use strict";t.r(a);var e=t(34),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_08-linux系统中环境变量的设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_08-linux系统中环境变量的设置"}},[s._v("#")]),s._v(" 08-linux系统中环境变量的设置")]),s._v(" "),t("h1",{attrs:{id:"业务描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#业务描述"}},[s._v("#")]),s._v(" 业务描述")]),s._v(" "),t("p",[s._v("Linux 是一个多用户的操作系统。多用户意味着每个用户登录系统后，都有自己专用的运行环境。而这个环境是由一组变量所定义，这组变量被称为环境变量。用户可以对自己的环境变量进行修改以达到对环境的要求。")]),s._v(" "),t("h1",{attrs:{id:"设置环境变量的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置环境变量的方法"}},[s._v("#")]),s._v(" 设置环境变量的方法")]),s._v(" "),t("h2",{attrs:{id:"系统环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统环境变量"}},[s._v("#")]),s._v(" 系统环境变量")]),s._v(" "),t("p",[s._v("这类变量对系统内的所有用户都生效，所有用户都可以使用这类变量。作用范围是整个系统。此文件只有 root 用户才能修改。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vi /etc/profile")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CLASSPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./JAVA_HOME/lib:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("/jre/lib\n")])])]),t("p",[s._v("添加完成后新的环境变量不会立即生效，需要执行 "),t("code",[s._v("source /etc/profile")]),s._v("  或 "),t("code",[s._v(". /etc/profile")]),s._v(" 才会生效，否则只有在下次重新登录此用户时才会生效。")]),s._v(" "),t("h2",{attrs:{id:"指定用户的环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指定用户的环境变量"}},[s._v("#")]),s._v(" 指定用户的环境变量")]),s._v(" "),t("p",[s._v("在用户目录下的 "),t("code",[s._v(".bash_profile")]),s._v(" 文件中添加变量，该文件是个隐藏文件，需要使用 "),t("code",[s._v("ll -a")]),s._v(" 查看：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),s._v("\nrethink\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /home/rethink/.bash_profile\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CLASSPATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./JAVA_HOME/lib:"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("/jre/lib\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /home/rethink/.bash_profile\n")])])]),t("p",[s._v("其中，"),t("code",[s._v(".bash_profile")]),s._v(" 文件只会在用户登录的时候读取。")]),s._v(" "),t("h2",{attrs:{id:"临时有效的环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#临时有效的环境变量"}},[s._v("#")]),s._v(" 临时有效的环境变量")]),s._v(" "),t("p",[s._v("此类环境变量只对当前的 shell 有效。当我们退出登录或者关闭终端再重新打开时，这些环境变量就会消失。是临时的。")]),s._v(" "),t("p",[s._v("设置方法：命令行下直接使用 "),t("code",[s._v("export 变量名=变量值")]),s._v(" 定义变量。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NAME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rethink"')]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$NAME")]),s._v("\nrethink\n")])])]),t("p",[s._v("设置环境变量常用命令")]),s._v(" "),t("p",[s._v("echo 用于打印显示环境变量，如：echo name")]),s._v(" "),t("p",[s._v("export 用于设置新的环境变量，如：export NAME=′rethink′")]),s._v(" "),t("p",[s._v("更新环境变量更新环境变量直接重新赋值即可：NAME='test'（注意：变量名前不需要加）")]),s._v(" "),t("p",[t("code",[s._v("env")]),s._v(" 显示当前用户的变量；")]),s._v(" "),t("p",[t("code",[s._v("set")]),s._v(" 显示当前 shell 的变量，shell 变量包含用户变量；")]),s._v(" "),t("p",[t("code",[s._v("unset")]),s._v(" 删除一个环境变量，如："),t("code",[s._v("unset NAME")])]),s._v(" "),t("p",[t("code",[s._v("readonly")]),s._v(" 设置环境变量只读，如："),t("code",[s._v("readonly NAME")]),s._v("，只读变量 unset 无效。")]),s._v(" "),t("h2",{attrs:{id:"系统常用环境变量应用分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#系统常用环境变量应用分析"}},[s._v("#")]),s._v(" 系统常用环境变量应用分析")]),s._v(" "),t("h3",{attrs:{id:"path-环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path-环境变量"}},[s._v("#")]),s._v(" PATH 环境变量")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $PATH")]),s._v("\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin\n")])])]),t("p",[s._v("路径之间用冒号分隔，这些路径都是一些可以找到可执行程序的目录列表。当我们输入一个指令时，shell 会先检查命令是否是系统内部命令，如果不是则会再去检查此命令是否是一个应用程序，shell 会试着从 PATH 中寻找这些应用程序。")]),s._v(" "),t("p",[s._v("如果 shell 在这些路径目录里没有找到可执行文件，就会报错；若找到，系统将调用执行应用程序。通过设置 PATH ，可以让我们运行程序或指令更加方便。")]),s._v(" "),t("blockquote",[t("p",[s._v("将某个目录路径加入到PATH中，可以这样写：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n/root/docker/httpd\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/root/docker/httpd\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以看到在 PATH 后面已经加上了我们当前所处目录的路径")]),s._v("\n")])])])]),s._v(" "),t("h3",{attrs:{id:"home-环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#home-环境变量"}},[s._v("#")]),s._v(" HOME 环境变量")]),s._v(" "),t("p",[s._v("用户的主工作目录，即为用户登录到Linux系统中时的默认目录。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),s._v("\nrethink\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("\n/home/rethink\n")])])]),t("h2",{attrs:{id:"histsize-环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#histsize-环境变量"}},[s._v("#")]),s._v(" HISTSIZE 环境变量")]),s._v(" "),t("p",[s._v("保存历史命令的条数。我们输入的指令都会被系统保存下来，这个环境变量记录的就是保持指令的条数。一般为1000。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HISTSIZE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTSIZE")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HISTSIZE")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001")]),s._v("\n")])])]),t("p",[s._v("历史命令是被保存在内存中的，当退出或者登录shell时，会自动保存或读取我们可以通过history命令来查看。可以使用符号 ! 执行指定序号的历史命令。例如，要执行第2个历史命令，则输入!2。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("59")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("who")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("61")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("who")]),s._v(" am i\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("63")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("who")]),s._v(" am i\nroot     pts/0        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),s._v("-04-04 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":00 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101.81")]),s._v(".92.18"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h2",{attrs:{id:"logname环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#logname环境变量"}},[s._v("#")]),s._v(" LOGNAME环境变量")]),s._v(" "),t("p",[s._v("当前用户登录名。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$LOGNAME")]),s._v("\nrethink\n"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOSTNAME")]),s._v(" 主机名称。\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOSTNAME")]),s._v("\nJDu4e00u53f7\n")])])]),t("h2",{attrs:{id:"shell环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell环境变量"}},[s._v("#")]),s._v(" SHELL环境变量")]),s._v(" "),t("p",[s._v("当前用户使用的shell种类。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$SHELL")]),s._v("\n/bin/bash\n")])])]),t("blockquote",[t("p",[s._v("参考资料：")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://yutian.blog.csdn.net/article/details/121168722",target:"_blank",rel:"noopener noreferrer"}},[s._v("08-linux系统中环境变量的设置"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);