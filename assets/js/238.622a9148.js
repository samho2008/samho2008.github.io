(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{2105:function(t,s,a){"use strict";a.r(s);var e=a(34),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"linux-wget-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-wget-命令"}},[t._v("#")]),t._v(" Linux wget 命令")]),t._v(" "),a("h2",{attrs:{id:"wget-命令简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wget-命令简介"}},[t._v("#")]),t._v(" wget 命令简介")]),t._v(" "),a("p",[a("strong",[t._v("GNU Wget")]),t._v("（常简称为 "),a("strong",[t._v("Wget")]),t._v("）是一个在网络上进行下载的简单而强大的自由软件，其本身也是 GNU 计划的一部分。它的名字是 “World Wide Web” 和 “Get” 的结合，同时也隐含了软件的主要功能。目前它支持通过 HTTP、HTTPS，以及 FTP 这三个最常见的 TCP/IP 协议协议下载。")]),t._v(" "),a("p",[t._v("它的主要特点包括：")]),t._v(" "),a("ul",[a("li",[t._v("支持递归下载")]),t._v(" "),a("li",[t._v("恰当的转换页面中的链接")]),t._v(" "),a("li",[t._v("生成可在本地浏览的页面镜像")]),t._v(" "),a("li",[t._v("支持代理服务器")])]),t._v(" "),a("h2",{attrs:{id:"wget-的发展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wget-的发展"}},[t._v("#")]),t._v(" wget 的发展")]),t._v(" "),a("p",[t._v("1996 年，随着互联网的爆发，Wget 出现了。并广泛的被 Unix 和主要的 Linux 发行版用户所使用。由于使用移植性非常良好的 C 语言，所以 Wget 可以轻松的在任何类似 Unix 的系统以及其他 Unix 变种操作系统上编译使用，如 Mac OS X，Microsoft Windows，和 OpenVMS。")]),t._v(" "),a("p",[t._v("由于没有交互式界面，在类 Unix 平台上 Wget 可在后台运行，截获并忽略 HANGUP 信号，因此在用户退出登录以后，仍可继续运行。通常，Wget 用于成批量地下载 Internet 网站上的文件，或制作远程网站的镜像。")]),t._v(" "),a("p",[t._v("在其之上的图形界面应用程序有：GNOME 下面的 gwget。Windows 系统下面的 wGetGUI（页面存档备份，存于互联网档案馆）。")]),t._v(" "),a("h2",{attrs:{id:"wget2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wget2"}},[t._v("#")]),t._v(" wget2")]),t._v(" "),a("p",[t._v("GNU Wget2 2.0.0 发布于 2021 年 9 月 26 日。比起 Wget 1.x 支持以下协议和技术：")]),t._v(" "),a("ul",[a("li",[t._v("HTTP/2")]),t._v(" "),a("li",[t._v("HTTP压缩")]),t._v(" "),a("li",[t._v("并行连接")]),t._v(" "),a("li",[t._v("使用HTTP头字段 "),a("code",[t._v("If-Modified-Since")])]),t._v(" "),a("li",[t._v("TCP Fast Open")])]),t._v(" "),a("h2",{attrs:{id:"wget-命令格式及选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wget-命令格式及选项"}},[t._v("#")]),t._v(" wget 命令格式及选项")]),t._v(" "),a("p",[t._v("Wget 的命令格式如下：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("URL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("输入 "),a("code",[t._v("wget --help")]),t._v(" 获取当前版本的所有选项。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wget --help")]),t._v("\nGNU Wget "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.14")]),t._v("，非交互式的网络文件下载工具。\n用法： "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("URL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n长选项所必须的参数在使用短选项时也是必须的。\n\n启动：\n  -V,  --version           显示 Wget 的版本信息并退出。\n  -h,  --help              打印此帮助。\n  -b,  --background        启动后转入后台。\n  -e,  --execute"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("COMMAND   运行一个“.wgetrc”风格的命令。\n\n日志和输入文件：\n  -o,  --output-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE    将日志信息写入 FILE。\n  -a,  --append-output"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE  将信息添加至 FILE。\n  -d,  --debug               打印大量调试信息。\n  -q,  --quiet               安静模式 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("无信息输出"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n  -v,  --verbose             详尽的输出 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("此为默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n  -nv, --no-verbose          关闭详尽输出，但不进入安静模式。\n       --report-speed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE   Output bandwidth as TYPE.  TYPE can be bits.\n  -i,  --input-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE     下载本地或外部 FILE 中的 URLs。\n  -F,  --force-html          把输入文件当成 HTML 文件。\n  -B,  --base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("URL            解析与 URL 相关的\n                             HTML 输入文件 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("由 -i -F 选项指定"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n       --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE         Specify config "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" to use.\n\n下载：\n  -t,  --tries"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NUMBER            设置重试次数为 NUMBER "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 代表无限制"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n       --retry-connrefused       即使拒绝连接也是重试。\n  -O,  --output-document"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE    将文档写入 FILE。\n  -nc, --no-clobber              skip downloads that would download to\n                                 existing files "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("overwriting them"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n  -c,  --continue                断点续传下载文件。\n       --progress"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE           选择进度条类型。\n  -N,  --timestamping            只获取比本地文件新的文件。\n  --no-use-server-timestamps     不用服务器上的时间戳来设置本地文件。\n  -S,  --server-response         打印服务器响应。\n       --spider                  不下载任何文件。\n  -T,  --timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("SECONDS")]),t._v("         将所有超时设为 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("SECONDS")]),t._v(" 秒。\n       --dns-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SECS        设置 DNS 查寻超时为 SECS 秒。\n       --connect-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SECS    设置连接超时为 SECS 秒。\n       --read-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SECS       设置读取超时为 SECS 秒。\n  -w,  --wait"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("SECONDS")]),t._v("            等待间隔为 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("SECONDS")]),t._v(" 秒。\n       --waitretry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("SECONDS")]),t._v("       在获取文件的重试期间等待 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("SECONDS")]),t._v(" 秒。\n       --random-wait             获取多个文件时，每次随机等待间隔\n                                 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("*WAIT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".1.5*WAIT 秒。\n       --no-proxy                禁止使用代理。\n  -Q,  --quota"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NUMBER            设置获取配额为 NUMBER 字节。\n       --bind-address"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ADDRESS    绑定至本地主机上的 ADDRESS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主机名或是 IP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n       --limit-rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RATE         限制下载速率为 RATE。\n       --no-dns-cache            关闭 DNS 查寻缓存。\n       --restrict-file-names"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OS  限定文件名中的字符为 OS 允许的字符。\n       --ignore-case             匹配文件/目录时忽略大小写。\n  -4,  --inet4-only              仅连接至 IPv4 地址。\n  -6,  --inet6-only              仅连接至 IPv6 地址。\n       --prefer-family"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FAMILY    首先连接至指定协议的地址\n                                 FAMILY 为 IPv6，IPv4 或是 none。\n       --user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("               将 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ftp")]),t._v(" 和 http 的用户名均设置为 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("。\n       --password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PASS           将 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ftp")]),t._v(" 和 http 的密码均设置为 PASS。\n       --ask-password            提示输入密码。\n       --no-iri                  关闭 IRI 支持。\n       --local-encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ENC      IRI "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("国际化资源标识符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 使用 ENC 作为本地编码。\n       --remote-encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ENC     使用 ENC 作为默认远程编码。\n       --unlink                  remove "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" before clobber.\n\n目录：\n  -nd, --no-directories           不创建目录。\n  -x,  --force-directories        强制创建目录。\n  -nH, --no-host-directories      不要创建主目录。\n       --protocol-directories     在目录中使用协议名称。\n  -P,  --directory-prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PREFIX  以 PREFIX/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". 保存文件\n       --cut-dirs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NUMBER          忽略远程目录中 NUMBER 个目录层。\n\nHTTP 选项：\n       --http-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("        设置 http 用户名为 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("。\n       --http-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PASS    设置 http 密码为 PASS。\n       --no-cache              不在服务器上缓存数据。\n       --default-page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NAME     改变默认页\n                               "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认页通常是“index.html”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n  -E,  --adjust-extension      以合适的扩展名保存 HTML/CSS 文档。\n       --ignore-length         忽略头部的‘Content-Length’区域。\n       --header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("STRING         在头部插入 STRING。\n       --max-redirect          每页所允许的最大重定向。\n       --proxy-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("       使用 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v(" 作为代理用户名。\n       --proxy-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PASS   使用 PASS 作为代理密码。\n       --referer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("URL           在 HTTP 请求头包含‘Referer: URL’。\n       --save-headers          将 HTTP 头保存至文件。\n  -U,  --user-agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("AGENT      标识为 AGENT 而不是 Wget/VERSION。\n       --no-http-keep-alive    禁用 HTTP keep-alive "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("永久连接"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n       --no-cookies            不使用 cookies。\n       --load-cookies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE     会话开始前从 FILE 中载入 cookies。\n       --save-cookies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE     会话结束后保存 cookies 至 FILE。\n       --keep-session-cookies  载入并保存会话 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("非永久"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" cookies。\n       --post-data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("STRING      使用 POST 方式；把 STRING 作为数据发送。\n       --post-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE        使用 POST 方式；发送 FILE 内容。\n       --content-disposition   当选中本地文件名时\n                               允许 Content-Disposition 头部 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("尚在实验"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n       --content-on-error      output the received content on server errors.\n       --auth-no-challenge     发送不含服务器询问的首次等待\n                               的基本 HTTP 验证信息。\n\nHTTPS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL/TLS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 选项：\n       --secure-protocol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PR     choose secure protocol, one of auto, SSLv2,\n                                SSLv3, TLSv1, TLSv1_1 and TLSv1_2.\n       --no-check-certificate   不要验证服务器的证书。\n       --certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE       客户端证书文件。\n       --certificate-type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE  客户端证书类型，PEM 或 DER。\n       --private-key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE       私钥文件。\n       --private-key-type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE  私钥文件类型，PEM 或 DER。\n       --ca-certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE    带有一组 CA 认证的文件。\n       --ca-directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DIR       保存 CA 认证的哈希列表的目录。\n       --random-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE       带有生成 SSL PRNG 的随机数据的文件。\n       --egd-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE          用于命名带有随机数据的 EGD 套接字的文件。\n\nFTP 选项：\n       --ftp-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("         设置 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ftp")]),t._v(" 用户名为 "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("。\n       --ftp-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PASS     设置 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ftp")]),t._v(" 密码为 PASS。\n       --no-remove-listing     不要删除‘.listing’文件。\n       --no-glob               不在 FTP 文件名中使用通配符展开。\n       --no-passive-ftp        禁用“passive”传输模式。\n       --preserve-permissions  保留远程文件的权限。\n       --retr-symlinks         递归目录时，获取链接的文件 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("而非目录"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n\nWARC options:\n       --warc-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILENAME      save request/response data to a .warc.gz file.\n       --warc-header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("STRING      insert STRING into the warcinfo record.\n       --warc-max-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NUMBER    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" maximum size of WARC files to NUMBER.\n       --warc-cdx                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),t._v(" CDX index files.\n       --warc-dedup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILENAME     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not store records listed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" this CDX file.\n       --no-warc-compression     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not compress WARC files with GZIP.\n       --no-warc-digests         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not calculate SHA1 digests.\n       --no-warc-keep-log        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" not store the log "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" a WARC record.\n       --warc-tempdir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DIRECTORY  location "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" temporary files created by the\n                                 WARC writer.\n\n递归下载：\n  -r,  --recursive          指定递归下载。\n  -l,  --level"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NUMBER       最大递归深度 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inf 或 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 代表无限制，即全部下载"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n       --delete-after       下载完成后删除本地文件。\n  -k,  --convert-links      让下载得到的 HTML 或 CSS 中的链接指向本地文件。\n  --backups"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("N   before writing "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" X, rotate up to N backup files.\n  -K,  --backup-converted   在转换文件 X 前先将它备份为 X.orig。\n  -m,  --mirror             -N -r -l inf --no-remove-listing 的缩写形式。\n  -p,  --page-requisites    下载所有用于显示 HTML 页面的图片之类的元素。\n       --strict-comments    用严格方式 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SGML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 处理 HTML 注释。\n\n递归接受/拒绝：\n  -A,  --accept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST               逗号分隔的可接受的扩展名列表。\n  -R,  --reject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST               逗号分隔的要拒绝的扩展名列表。\n       --accept-regex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("REGEX        regex matching accepted URLs.\n       --reject-regex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("REGEX        regex matching rejected URLs.\n       --regex-type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TYPE           regex "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("posix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("pcre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n  -D,  --domains"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST              逗号分隔的可接受的域列表。\n       --exclude-domains"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST      逗号分隔的要拒绝的域列表。\n       --follow-ftp                跟踪 HTML 文档中的 FTP 链接。\n       --follow-tags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST          逗号分隔的跟踪的 HTML 标识列表。\n       --ignore-tags"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST          逗号分隔的忽略的 HTML 标识列表。\n  -H,  --span-hosts                递归时转向外部主机。\n  -L,  --relative                  只跟踪有关系的链接。\n  -I,  --include-directories"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST  允许目录的列表。\n  --trust-server-names             use the name specified by the redirection\n                                   url last component.\n  -X,  --exclude-directories"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("LIST  排除目录的列表。\n  -np, --no-parent                 不追溯至父目录。\n\n请将错误报告或建议寄给 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("bug-wget@gnu.org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("。\n")])])]),a("h2",{attrs:{id:"使用-wget-命令下载单个文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-wget-命令下载单个文件"}},[t._v("#")]),t._v(" 使用 wget 命令下载单个文件")]),t._v(" "),a("p",[t._v("从网络上下载文件，并保存到当前目录下。以链接中的文件名作为保存文件名。")]),t._v(" "),a("p",[t._v("执行以下命令后，会在当前目录下下载一个 redis-6.2.6.tar.gz 的文件。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://download.redis.io/releases/redis-6.2.6.tar.gz\n")])])]),a("p",[t._v("在下载的过程中会显示进度条，包含（下载完成百分比，已经下载的字节，当前下载速度，剩余下载时间）。")]),t._v(" "),a("h2",{attrs:{id:"使用-wget-o-下载并以不同的文件名保存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-wget-o-下载并以不同的文件名保存"}},[t._v("#")]),t._v(" 使用 wget -O 下载并以不同的文件名保存")]),t._v(" "),a("p",[t._v("wget 默认会以最后一个符合 ”/” 的后面的字符来命名，对于动态链接的下载通常文件名会不正确。\n下面的例子会下载一个文件并以名称 "),a("code",[t._v("download.php?id=1080")]),t._v(" 保存")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://www.centos.bz/download?id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1080")]),t._v("\n")])])]),a("p",[t._v("即使下载的文件是zip格式，它仍然以download.php?id=1080命令。\n正确：为了解决这个问题，我们可以使用参数-O来指定一个文件名：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -O wordpress.zip http://www.centos.bz/download.php?id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1080")]),t._v("\n")])])]),a("h2",{attrs:{id:"使用-wget-limit-rate-限速下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-wget-limit-rate-限速下载"}},[t._v("#")]),t._v(" 使用 wget –limit-rate 限速下载")]),t._v(" "),a("p",[t._v("当你执行wget的时候，它默认会占用全部可能的宽带下载。但是当你准备下载一个大文件，而你还需要下载其它文件时就有必要限速了。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" –limit-rate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("300k http://cn.wordpress.org/wordpress-3.1-zh_CN.zip\n")])])]),a("h2",{attrs:{id:"使用wget-c断点续传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用wget-c断点续传"}},[t._v("#")]),t._v(" 使用wget -c断点续传")]),t._v(" "),a("p",[t._v("使用wget -c重新启动下载中断的文件:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -c http://cn.wordpress.org/wordpress-3.1-zh_CN.zip\n")])])]),a("p",[t._v("对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件。需要继续中断的下载时可以使用 -c 参数。")]),t._v(" "),a("h2",{attrs:{id:"使用-wget-b-后台下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-wget-b-后台下载"}},[t._v("#")]),t._v(" 使用 wget -b 后台下载")]),t._v(" "),a("p",[t._v("对于下载非常大的文件的时候，我们可以使用参数 -b 进行后台下载。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -b http://cn.wordpress.org/wordpress-3.1-zh_CN.zip\n")])])]),a("p",[t._v("Continuing in background, pid 1840.\nOutput will be written to `wget-log’.\n你可以使用以下命令来察看下载进度")]),t._v(" "),a("p",[t._v("tail -f wget-log")]),t._v(" "),a("h2",{attrs:{id:"伪装代理名称下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪装代理名称下载"}},[t._v("#")]),t._v(" 伪装代理名称下载")]),t._v(" "),a("p",[t._v("有些网站能通过根据判断代理名称不是浏览器而拒绝你的下载请求。不过你可以通过 –user-agent 参数伪装。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" –user-agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("”Mozilla/5.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" U"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Windows NT "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" en-US"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" AppleWebKit/534.16 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("KHTML, like Gecko"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Chrome/10.0.648.204 Safari/534.16″ 下载链接\n")])])]),a("h2",{attrs:{id:"使用wget-spider测试下载链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用wget-spider测试下载链接"}},[t._v("#")]),t._v(" 使用wget –spider测试下载链接")]),t._v(" "),a("p",[t._v("当你打算进行定时下载，你应该在预定时间测试下载链接是否有效。我们可以增加–spider参数进行检查。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" –spider URL\n")])])]),a("blockquote",[a("p",[t._v("参考资料：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/guo_qiangqiang/article/details/90174525",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux的下载文件工具wget命令简介"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Wget",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wget-维基百科"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);