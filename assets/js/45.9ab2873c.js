(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{2039:function(t,a,s){"use strict";s.r(a);var e=s(34),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"安装-gitea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-gitea"}},[t._v("#")]),t._v(" 安装 Gitea")]),t._v(" "),e("h2",{attrs:{id:"通过可执行程序方式安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过可执行程序方式安装"}},[t._v("#")]),t._v(" 通过可执行程序方式安装")]),t._v(" "),e("p",[t._v("参考文档：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.gitea.io/en-us/install-from-binary/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Installation from binary"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"通过-docker-方式安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#通过-docker-方式安装"}},[t._v("#")]),t._v(" 通过 Docker 方式安装")]),t._v(" "),e("p",[t._v("参考文档："),e("a",{attrs:{href:"https://docs.gitea.io/en-us/install-with-docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.gitea.io/en-us/install-with-docker/"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"检查是否安装-docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查是否安装-docker-compose"}},[t._v("#")]),t._v(" 检查是否安装 Docker Compose")]),t._v(" "),e("p",[t._v("查看安装 Docker 安装的时候是否安装了 Docker Compose 组件。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" compose version\n")])])]),e("blockquote",[e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker compose version")]),t._v("\nDocker Compose version v2.10.2\n")])])])]),t._v(" "),e("p",[t._v("如果显示命令不存在，需要先安装 "),e("code",[t._v("docker-compose")]),t._v("，参考文档："),e("a",{attrs:{href:"https://bbs.huaweicloud.com/blogs/286823",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bbs.huaweicloud.com/blogs/286823"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"创建-docker-compose-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-docker-compose-yml"}},[t._v("#")]),t._v(" 创建 docker-compose.yml")]),t._v(" "),e("p",[t._v("创建一个 "),e("code",[t._v("docker-compose.yml")]),t._v(" 文件，输入【i】进入编辑模式。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" docker-compose.yml\n")])])]),e("p",[t._v("把以下内容复制进去。")]),t._v(" "),e("p",[t._v("其中，services.server.image 为使用的镜像，你可能需要修改版本号，下面以【1.17.2】为例。")]),t._v(" "),e("p",[e("strong",[t._v("注意：所有数据均保存到宿主机上的【/usr/local/gitea】目录下。")]),t._v("（如果该目录不存在会自动创建）")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitea")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gitea/gitea"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.17.2\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gitea\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" USER_UID=1000\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" USER_GID=1000\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" always\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" gitea\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /usr/local/gitea"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /etc/timezone"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/timezone"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ro\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /etc/localtime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/localtime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ro\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /home/git/.ssh/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data/git/.ssh\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3000:3000"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:222:22"')]),t._v("\n")])])]),e("h3",{attrs:{id:"ssh-端口转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh-端口转发"}},[t._v("#")]),t._v(" SSH 端口转发")]),t._v(" "),e("p",[t._v("如果使用的 Docker 部署，由于容器和主机环境隔离，不能直接使用 22 端口，需要把主机的 22 端口转发到特定的端口。")]),t._v(" "),e("p",[t._v("参考文档：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.gitea.io/en-us/install-with-docker/#sshing-shim-with-authorized_keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("Installation with Docker"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://ehlxr.top/2021/01/06/docker-gitea-share-port-22-with-host/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 安装 Gitea/Gogs 与主机共享 22 端口"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("以下命令都在主机上执行：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 Git 用户")]),t._v("\nadduser "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以 git 用户身份创建 SSH 密钥")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" -u "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ssh-keygen -t rsa -b "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gitea Host Key"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# =================== 注意，这里要连续按三下回车确认生成的密钥信息，不要把下面的内容和上面命令一起复制")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把公钥设置为授权的密钥")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty '),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /home/git/.ssh/id_rsa.pub"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /home/git/.ssh/authorized_keys\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# authorized_keys 文件需要 600 权限")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v(" /home/git/.ssh/authorized_keys\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建文件，用来端口转发用")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EOF"'),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" /usr/local/bin/gitea")]),t._v('\n#!/bin/sh\nssh -p 222 -o StrictHostKeyChecking=no git@127.0.0.1 "SSH_ORIGINAL_COMMAND=\\"$SSH_ORIGINAL_COMMAND\\" $0 $@"\nEOF')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加执行权限")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/gitea\n\n")])])]),e("p",[t._v("查看 git 用户的 UID 和 GID")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n\n")])])]),e("blockquote",[e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# id git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("uid")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("git"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("gid")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("git"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 组"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("git"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("p",[t._v("修改 "),e("code",[t._v("docker-compose.yml")]),t._v("，把 222 端口转发到容器内部的 22 端口，并且这个端口是用来转发用的，所以只需要本机使用即可，不用暴露到公网。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" docker-compose.yml\n")])])]),e("p",[t._v("在 "),e("code",[t._v("volumes")]),t._v(" 中添加：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("      - /home/git/.ssh/:/data/git/.ssh\n")])])]),e("p",[t._v("在 "),e("code",[t._v("ports")]),t._v(" 中添加：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("      - "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:222:22"')]),t._v("\n")])])]),e("p",[t._v("如图所示，"),e("strong",[t._v("注意这里的 UID 和 GID 要和上面 git 用户的 "),e("code",[t._v("USER_UID")]),t._v(" 和 "),e("code",[t._v("USER_GID")]),t._v(" 的值对应！")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(930),alt:"image-20221001165554546"}})]),t._v(" "),e("h3",{attrs:{id:"启动-gitea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-gitea"}},[t._v("#")]),t._v(" 启动 Gitea")]),t._v(" "),e("p",[t._v("启动 Gitea")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" compose up -d\n")])])]),e("blockquote",[e("p",[t._v("如果提示以下内容，检查 "),e("code",[t._v("docker-compose.yml")]),t._v(" 文件是否有误。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker compose up -d")]),t._v("\nNon-string key at "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" level: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])])]),t._v(" "),e("p",[t._v("查看是否正确启动")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" gitea\n")])])]),e("p",[t._v("查看启动日志：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" logs gitea\n")])])]),e("h2",{attrs:{id:"配置-gitea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-gitea"}},[t._v("#")]),t._v(" 配置 Gitea")]),t._v(" "),e("p",[t._v("访问 "),e("code",[t._v("http://ip:3000")]),t._v("，把【ip】换成服务器的地址。")]),t._v(" "),e("p",[t._v("数据库使用默认的【SQLite3】即可，")]),t._v(" "),e("p",[t._v("【站点名称】可以改成自己的公司或者团队名字，")]),t._v(" "),e("p",[t._v("【服务器域名】和【基础URL】中的【localhost】要改成服务器 IP 地址，或者用域名。")]),t._v(" "),e("p",[e("strong",[t._v("注意：这里的【SSH 服务端口】（后面会做 SSH 端口转发，这里可以用 22，虽然是 222:22，但是不会和主机的冲突）和【HTTP 服务端口】要和主机上的端口对应，而不是用容器内部的端口。")])]),t._v(" "),e("p",[e("strong",[t._v("比如 HTTP 服务端口默认是【3000:3000】，如果修改为【5000:3000】，那么这里的 HTTP 服务端口也要修改为【5000】！")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(931),alt:"image-20220925112237543"}})]),t._v(" "),e("h3",{attrs:{id:"使用-ip-地址配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-ip-地址配置"}},[t._v("#")]),t._v(" 使用 IP 地址配置")]),t._v(" "),e("p",[t._v("以服务器 IP【10.1.0.10】为例")]),t._v(" "),e("p",[e("img",{attrs:{src:s(932),alt:"image-20220925112430745"}})]),t._v(" "),e("h3",{attrs:{id:"使用域名配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用域名配置"}},[t._v("#")]),t._v(" 使用域名配置")]),t._v(" "),e("p",[t._v("比如，公司的域名是【team.com】，那么建议前缀使用【git.】，最终域名为【git.team.com】，然后修改 hosts 文件映射为具体的内网 IP 地址。")]),t._v(" "),e("p",[t._v("在以前我们用 gitlab. 作为前缀，但是不利于我们以后更换远程仓库平台，所以建议直接使用 git")]),t._v(" "),e("p",[e("img",{attrs:{src:s(933),alt:"image-20220926030352413"}})]),t._v(" "),e("h4",{attrs:{id:"修改-hosts-文件-映射-ip-地址到特定域名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改-hosts-文件-映射-ip-地址到特定域名"}},[t._v("#")]),t._v(" 修改 hosts 文件，映射 IP 地址到特定域名")]),t._v(" "),e("p",[t._v("在 hosts 文件添加以下内容：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),t._v(".0.10 git.team.com\n")])])]),e("h4",{attrs:{id:"nginx-反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-反向代理"}},[t._v("#")]),t._v(" Nginx 反向代理")]),t._v(" "),e("p",[t._v("由于我们是使用 Docker 部署的，需要使用 Nginx 进行域名绑定和端口转发。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /usr/local/nginx/conf/nginx.conf\n")])])]),e("p",[t._v("把所有通过 IP 访问 80 端口的请求都转发到域名，这样通过 IP 访问就会直接跳转到域名。")]),t._v(" "),e("p",[t._v("下面以【git.team.com】域名为例子。")]),t._v(" "),e("div",{staticClass:"language-hocon extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  server {\n    listen 80;\n    server_name localhost;\n    rewrite ^/(.*)$ http://git.team.com/$1 permanent;\n  }\n")])])]),e("p",[t._v("所有访问【git.team.com】的请求都转发到 3000 端口上。（Gitea 的 Web 服务使用的是 3000 端口）")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  server {\n    listen 80;\n    server_name git.team.com;\n    location / {\n      proxy_pass http://localhost:3000;\n    }\n  }\n")])])]),e("p",[t._v("这个时候，你会发现一个问题，直接通过【IP:3000】的方式，还是可以访问到 Gitea，这是因为我们使用 Docker 搭建的容器，如果直接通过【3000:3000】这种方式映射端口，宿主机上的端口会自动放行 iptables 防火墙上的端口（CentOS 7 引入的 firewalld 防火墙，CentOS 6 引入的 iptables，CentOS 7 的 firewalld 和 iptables 两个防火墙可以兼容，而 Docker 使用的是 iptables 防火墙），那么，如果我们想 3000 端口只能在本机访问，外网不能访问要怎么操作呢？")]),t._v(" "),e("p",[t._v("修改 "),e("code",[t._v("docker-compose.yml")]),t._v("。")]),t._v(" "),e("p",[t._v("把 ports 中原来【3000:3000】改为【127.0.0.1:3000:3000】，表示宿主机上的端口只能在【127.0.0.1】访问，也就是本机。而默认是 0.0.0.0 所有主机都可以连接。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(934),alt:"image-20220926105900389"}})]),t._v(" "),e("p",[t._v("修改完成后，把原来的容器删掉，利用现在的文件重新搭建一个新的，别担心，你的数据都挂载到了宿主机上，不会丢失。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除现在的 Gitea 容器")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f gitea\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用现在的脚本重新搭建一个新的容器")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" compose up -d\n")])])]),e("h3",{attrs:{id:"配置邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置邮箱"}},[t._v("#")]),t._v(" 配置邮箱")]),t._v(" "),e("p",[t._v("点击【电子邮箱设置】，填写邮件服务器对应的信息。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(935),alt:"image-20220925112619427"}})]),t._v(" "),e("h3",{attrs:{id:"服务器和第三方服务设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器和第三方服务设置"}},[t._v("#")]),t._v(" 服务器和第三方服务设置")]),t._v(" "),e("p",[t._v("勾选【启用本地模式】、【禁用 Gravatar 头像】、【启用页面访问限制】（如果不勾选的话，用户不登录也可以通过【探索】功能查看所有公开的仓库、用户、组织，有可能造成隐私泄露问题）。")]),t._v(" "),e("p",[t._v("不勾选【启用 Federated 头像】、【启用 OpenID 登录】、【启用 OpenID 自助注册】、【默认情况下允许创建组织】（应由管理员给予特定用户权限后才能创建，不应该所有用户都能随便创建组织）。")]),t._v(" "),e("p",[t._v("改成如图所示的样子。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(936),alt:"image-20220925124909453"}})]),t._v(" "),e("h3",{attrs:{id:"管理员账号设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理员账号设置"}},[t._v("#")]),t._v(" 管理员账号设置")]),t._v(" "),e("p",[t._v("建议提前设定好，就算现在不设置，后面第一个注册的用户也会成为管理员。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(937),alt:"image-20220925113552468"}})]),t._v(" "),e("h2",{attrs:{id:"进入管理后台"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进入管理后台"}},[t._v("#")]),t._v(" 进入管理后台")]),t._v(" "),e("p",[t._v("使用管理员账号登录，点击右上角，选择【管理后台】。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(938),alt:"image-20220925122214470"}})]),t._v(" "),e("h2",{attrs:{id:"修改配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件"}},[t._v("#")]),t._v(" 修改配置文件")]),t._v(" "),e("p",[t._v("Gitea 初始化的配置文件名为【app.ini】")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /usr/local/gitea/gitea/conf/app.ini\n")])])]),e("p",[t._v("修改完成后，需要重启容器才可以生效。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" restart gitea\n")])])]),e("p",[t._v("参数说明："),e("a",{attrs:{href:"https://docs.gitea.io/en-us/config-cheat-sheet/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.gitea.io/en-us/config-cheat-sheet/"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("参考文献：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.gitea.io/zh-cn/install-with-docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 Docker 安装"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6882559251416842253",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitea 安装"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports},930:function(t,a,s){t.exports=s.p+"assets/img/image-20221001165554546.b5c161b3.png"},931:function(t,a,s){t.exports=s.p+"assets/img/image-20220925112237543.6cae0a02.png"},932:function(t,a,s){t.exports=s.p+"assets/img/image-20220925112430745.50e5c6d3.png"},933:function(t,a,s){t.exports=s.p+"assets/img/image-20220926030352413.e13d5f7c.png"},934:function(t,a,s){t.exports=s.p+"assets/img/image-20220926105900389.24992d4e.png"},935:function(t,a,s){t.exports=s.p+"assets/img/image-20220925112619427.863e9c10.png"},936:function(t,a,s){t.exports=s.p+"assets/img/image-20220925124909453.77a5ec8f.png"},937:function(t,a,s){t.exports=s.p+"assets/img/image-20220925113552468.a9c06257.png"},938:function(t,a,s){t.exports=s.p+"assets/img/image-20220925122214470.7a7773e6.png"}}]);